{"version":3,"file":"PMREMCubeUVPacker.js","sources":["../../../../../node_modules/three/examples/jsm/pmrem/PMREMCubeUVPacker.js"],"sourcesContent":["/**\n * @author Prashant Sharma / spidersharma03\n * @author Ben Houston / bhouston, https://clara.io\n *\n * This class takes the cube lods(corresponding to different roughness values), and creates a single cubeUV\n * Texture. The format for a given roughness set of faces is simply::\n * +X+Y+Z\n * -X-Y-Z\n * For every roughness a mip map chain is also saved, which is essential to remove the texture artifacts due to\n * minification.\n * Right now for every face a PlaneMesh is drawn, which leads to a lot of geometry draw calls, but can be replaced\n * later by drawing a single buffer and by sending the appropriate faceIndex via vertex attributes.\n * The arrangement of the faces is fixed, as assuming this arrangement, the sampling function has been written.\n */\n\nimport {\n\tBackSide,\n\tCubeUVReflectionMapping,\n\tLinearFilter,\n\tLinearToneMapping,\n\tMesh,\n\tNoBlending,\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tRGBEEncoding,\n\tRGBM16Encoding,\n\tScene,\n\tShaderMaterial,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from \"../../../build/three.module.js\";\n\nvar PMREMCubeUVPacker = ( function () {\n\n\tvar camera = new OrthographicCamera();\n\tvar scene = new Scene();\n\tvar shader = getShader();\n\n\tvar PMREMCubeUVPacker = function ( cubeTextureLods ) {\n\n\t\tthis.cubeLods = cubeTextureLods;\n\t\tvar size = cubeTextureLods[ 0 ].width * 4;\n\n\t\tvar sourceTexture = cubeTextureLods[ 0 ].texture;\n\t\tvar params = {\n\t\t\tformat: sourceTexture.format,\n\t\t\tmagFilter: sourceTexture.magFilter,\n\t\t\tminFilter: sourceTexture.minFilter,\n\t\t\ttype: sourceTexture.type,\n\t\t\tgenerateMipmaps: sourceTexture.generateMipmaps,\n\t\t\tanisotropy: sourceTexture.anisotropy,\n\t\t\tencoding: ( sourceTexture.encoding === RGBEEncoding ) ? RGBM16Encoding : sourceTexture.encoding\n\t\t};\n\n\t\tif ( params.encoding === RGBM16Encoding ) {\n\n\t\t\tparams.magFilter = LinearFilter;\n\t\t\tparams.minFilter = LinearFilter;\n\n\t\t}\n\n\t\tthis.CubeUVRenderTarget = new WebGLRenderTarget( size, size, params );\n\t\tthis.CubeUVRenderTarget.texture.name = \"PMREMCubeUVPacker.cubeUv\";\n\t\tthis.CubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\n\t\tthis.objects = [];\n\n\t\tvar geometry = new PlaneBufferGeometry( 1, 1 );\n\n\t\tvar faceOffsets = [];\n\t\tfaceOffsets.push( new Vector2( 0, 0 ) );\n\t\tfaceOffsets.push( new Vector2( 1, 0 ) );\n\t\tfaceOffsets.push( new Vector2( 2, 0 ) );\n\t\tfaceOffsets.push( new Vector2( 0, 1 ) );\n\t\tfaceOffsets.push( new Vector2( 1, 1 ) );\n\t\tfaceOffsets.push( new Vector2( 2, 1 ) );\n\n\t\tvar textureResolution = size;\n\t\tsize = cubeTextureLods[ 0 ].width;\n\n\t\tvar offset2 = 0;\n\t\tvar c = 4.0;\n\t\tthis.numLods = Math.log( cubeTextureLods[ 0 ].width ) / Math.log( 2 ) - 2; // IE11 doesn't support Math.log2\n\t\tfor ( var i = 0; i < this.numLods; i ++ ) {\n\n\t\t\tvar offset1 = ( textureResolution - textureResolution / c ) * 0.5;\n\t\t\tif ( size > 16 ) c *= 2;\n\t\t\tvar nMips = size > 16 ? 6 : 1;\n\t\t\tvar mipOffsetX = 0;\n\t\t\tvar mipOffsetY = 0;\n\t\t\tvar mipSize = size;\n\n\t\t\tfor ( var j = 0; j < nMips; j ++ ) {\n\n\t\t\t\t// Mip Maps\n\t\t\t\tfor ( var k = 0; k < 6; k ++ ) {\n\n\t\t\t\t\t// 6 Cube Faces\n\t\t\t\t\tvar material = shader.clone();\n\t\t\t\t\tmaterial.uniforms[ 'envMap' ].value = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.envMap = this.cubeLods[ i ].texture;\n\t\t\t\t\tmaterial.uniforms[ 'faceIndex' ].value = k;\n\t\t\t\t\tmaterial.uniforms[ 'mapSize' ].value = mipSize;\n\n\t\t\t\t\tvar planeMesh = new Mesh( geometry, material );\n\t\t\t\t\tplaneMesh.position.x = faceOffsets[ k ].x * mipSize - offset1 + mipOffsetX;\n\t\t\t\t\tplaneMesh.position.y = faceOffsets[ k ].y * mipSize - offset1 + offset2 + mipOffsetY;\n\t\t\t\t\tplaneMesh.material.side = BackSide;\n\t\t\t\t\tplaneMesh.scale.setScalar( mipSize );\n\t\t\t\t\tthis.objects.push( planeMesh );\n\n\t\t\t\t}\n\t\t\t\tmipOffsetY += 1.75 * mipSize;\n\t\t\t\tmipOffsetX += 1.25 * mipSize;\n\t\t\t\tmipSize /= 2;\n\n\t\t\t}\n\t\t\toffset2 += 2 * size;\n\t\t\tif ( size > 16 ) size /= 2;\n\n\t\t}\n\n\t};\n\n\tPMREMCubeUVPacker.prototype = {\n\n\t\tconstructor: PMREMCubeUVPacker,\n\n\t\tupdate: function ( renderer ) {\n\n\t\t\tvar size = this.cubeLods[ 0 ].width * 4;\n\t\t\t// top and bottom are swapped for some reason?\n\t\t\tcamera.left = - size * 0.5;\n\t\t\tcamera.right = size * 0.5;\n\t\t\tcamera.top = - size * 0.5;\n\t\t\tcamera.bottom = size * 0.5;\n\t\t\tcamera.near = 0;\n\t\t\tcamera.far = 1;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.add( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t\tvar gammaInput = renderer.gammaInput;\n\t\t\tvar gammaOutput = renderer.gammaOutput;\n\t\t\tvar toneMapping = renderer.toneMapping;\n\t\t\tvar toneMappingExposure = renderer.toneMappingExposure;\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.gammaInput = false;\n\t\t\trenderer.gammaOutput = false;\n\t\t\trenderer.toneMapping = LinearToneMapping;\n\t\t\trenderer.toneMappingExposure = 1.0;\n\t\t\trenderer.setRenderTarget( this.CubeUVRenderTarget );\n\t\t\trenderer.render( scene, camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.toneMappingExposure = toneMappingExposure;\n\t\t\trenderer.gammaInput = gammaInput;\n\t\t\trenderer.gammaOutput = gammaOutput;\n\n\t\t\tfor ( var i = 0; i < this.objects.length; i ++ ) {\n\n\t\t\t\tscene.remove( this.objects[ i ] );\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\n\n\t\t\t\tthis.objects[ i ].material.dispose();\n\n\t\t\t}\n\n\t\t\tthis.objects[ 0 ].geometry.dispose();\n\n\t\t}\n\n\t};\n\n\tfunction getShader() {\n\n\t\tvar shaderMaterial = new ShaderMaterial( {\n\n\t\t\tuniforms: {\n\t\t\t\t\"faceIndex\": { value: 0 },\n\t\t\t\t\"mapSize\": { value: 0 },\n\t\t\t\t\"envMap\": { value: null },\n\t\t\t\t\"testColor\": { value: new Vector3( 1, 1, 1 ) }\n\t\t\t},\n\n\t\t\tvertexShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        void main() {\\\n          vUv = uv;\\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\n        }\",\n\n\t\t\tfragmentShader:\n        \"precision highp float;\\\n        varying vec2 vUv;\\\n        uniform samplerCube envMap;\\\n        uniform float mapSize;\\\n        uniform vec3 testColor;\\\n        uniform int faceIndex;\\\n        \\\n        void main() {\\\n          vec3 sampleDirection;\\\n          vec2 uv = vUv;\\\n          uv = uv * 2.0 - 1.0;\\\n          uv.y *= -1.0;\\\n          if(faceIndex == 0) {\\\n            sampleDirection = normalize(vec3(1.0, uv.y, -uv.x));\\\n          } else if(faceIndex == 1) {\\\n            sampleDirection = normalize(vec3(uv.x, 1.0, uv.y));\\\n          } else if(faceIndex == 2) {\\\n            sampleDirection = normalize(vec3(uv.x, uv.y, 1.0));\\\n          } else if(faceIndex == 3) {\\\n            sampleDirection = normalize(vec3(-1.0, uv.y, uv.x));\\\n          } else if(faceIndex == 4) {\\\n            sampleDirection = normalize(vec3(uv.x, -1.0, -uv.y));\\\n          } else {\\\n            sampleDirection = normalize(vec3(-uv.x, uv.y, -1.0));\\\n          }\\\n          vec4 color = envMapTexelToLinear( textureCube( envMap, sampleDirection ) );\\\n          gl_FragColor = linearToOutputTexel( color );\\\n        }\",\n\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tshaderMaterial.type = 'PMREMCubeUVPacker';\n\n\t\treturn shaderMaterial;\n\n\t}\n\n\n\treturn PMREMCubeUVPacker;\n\n} )();\n\nexport { PMREMCubeUVPacker };\n"],"names":[],"mappings":"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"}